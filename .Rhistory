head(predictions$posterior, 6)
# Linear discriminants
head(predictions$x, 3)
# Make graph
lda.data <- cbind(SpecData %>% filter(Group=='Prosimii'), predict(model)$x)
ggplot(lda.data, aes(-LD1,-LD2), inherit.aes = FALSE) +
geom_point(aes(color = Diet))
require(graphics)
summary(M2aov <- aov(data = SpecData, M2.Length ~ Group))
TukeyHSD(M2aov, "M2.Length", ordered = TRUE)
M2aov <- aov(data = SpecData, M2.Length ~ Group)
TukeyHSD(M2aov, "M2.Length", ordered = TRUE)
require(graphics)
summary(M2aov <- aov(data = SpecData, M2.Length ~ Group))
#TukeyHSD(M2aov, "M2.Length", ordered = TRUE)
plot(TukeyHSD(M2aov, "M2.Length"))
require(graphics)
summary(M2aov <- aov(data = SpecData, M2.Length ~ Group))
#TukeyHSD(M2aov, "M2.Length", ordered = TRUE)
#plot(TukeyHSD(M2aov, "M2.Length"))
install.packages("geiger")
library(geiger)
library(ape)
library(nlme)
library(phytools)
pglstree <- read.nexus("consensusTree_10kTrees_Primates_Version3.nex")
# Summarize loaded tree data
summary(pglstree)
plot(pglstree)
#Check to make sure both have the same species listed
name.check(SpecData, pglstree)
install.packages("geiger")
install.packages("geiger")
library(geiger)
library(ape)
library(nlme)
library(phytools)
pglstree <- read.nexus("consensusTree_10kTrees_Primates_Version3.nex")
# Summarize loaded tree data
summary(pglstree)
plot(pglstree)
#Check to make sure both have the same species listed
name.check(SpecData, pglstree)
install.packages("geiger")
library(geiger)
library(ape)
library(nlme)
library(phytools)
pglstree <- read.nexus("consensusTree_10kTrees_Primates_Version3.nex")
# Summarize loaded tree data
summary(pglstree)
plot(pglstree)
#Check to make sure both have the same species listed
name.check(SpecData, pglstree)
pglsModel2 <- gls(Group ~ Diet, correlation = corBrownian(phy = pglstree),
data = SpecData, method = "ML")
#pglsModel2 <- gls(Group ~ Diet, correlation = corBrownian(phy = pglstree),
data = SpecData, method = "ML")
#pglsModel2 <- gls(Group ~ Diet, correlation = corBrownian(phy = pglstree),
# data = SpecData, method = "ML")
#anova(pglsModel2)
library(ape)
library(caper)
library(picante)
SpecData <- read.csv("specvariable_repdata.csv")
pglstree <- read.nexus("consensusTree_10kTrees_Primates_Version3.nex")
zoom(pglstree, list(grep("Prosimii", pglstree$tip.label)), subtree=FALSE)
zoom(pglstree, list(grep("Cercopithecus", pglstree$tip.label)), subtree=TRUE)
is.binary.tree(pglstree)
pglstree = multi2di(pglstree)
DropFromData = setdiff(SpecData$Binomial, pglstree$tip.label)
OPCR
SR
SQ
DNE
RFI
# Recreating Figure 2: Boxplots of each Dental topography to the type of diet
library(ggplot2)
OPCR <- ggplot(data = SpecData, aes(x=Diet, y=OPCR)) + geom_boxplot(aes(fill=Group))
SR <- ggplot(data = SpecData, aes(x=Diet, y=Shearing.ratio)) + geom_boxplot(aes(fill=Group))
SQ <- ggplot(data = SpecData, aes(x=Diet, y=Shearing.quotient)) + geom_boxplot(aes(fill=Group))
DNE <- ggplot(data = SpecData, aes(x=Diet, y=DNE)) + geom_boxplot(aes(fill=Group))
RFI <- ggplot(data = SpecData, aes(x=Diet, y=RFI)) + geom_boxplot(aes(fill=Group))
#Call each to check on the data, note that 6 rows are removed in the shearing.ratio and shearing.quotient due to lack of data for Daubentonidae
OPCR
SR
SQ
DNE
RFI
## WRITE FIGURE CAPTIONS
# "In DNE and RFI, there is an overall trend of folivorous Alouatta and Brachyteles and omnivorous= insectivorous Saimiri exhibiting the highest values,frugivorous genera with intermediate values, and hardobject feeding genera with the lowest values. SR is similar,except that Saimiri has more moderate shear, similar to that of the frugivores in the sample. For SQ,values are broadly similar across dietary groups, except for lower values in hard-object feeders. Patterns ofOPCR are more complicated, with high complexity found in the pitheciines and frugivores Callicebus and Lagothrix."
# We will embed Figure 2 from the Winchester paper here:
<center><img src="Winchester_Figure2"></center>
# We will embed Figure 2 from the Winchester paper here:
<center> <img src="Winchester_Figure2"> </center>
## WRITE FIGURE CAPTIONS
# "In DNE and RFI, there is an overall trend of folivorous Alouatta and Brachyteles and omnivorous= insectivorous Saimiri exhibiting the highest values,frugivorous genera with intermediate values, and hardobject feeding genera with the lowest values. SR is similar,except that Saimiri has more moderate shear, similar to that of the frugivores in the sample. For SQ,values are broadly similar across dietary groups, except for lower values in hard-object feeders. Patterns ofOPCR are more complicated, with high complexity found in the pitheciines and frugivores Callicebus and Lagothrix."
# For M2 Length
qqnorm(SpecData$M2.Length, main="M2.Length Normality Check")
qqline(SpecData$M2.Length, col="black")
# For OPCR
qqnorm(SpecData$OPCR, main="OPCR Normality Check")
qqline(SpecData$OPCR, col="black")
qqnorm(SpecData$Shearing.ratio, main="Shearing Ratio Normality Check")
qqline(SpecData$Shearing.ratio, col="black")
qqnorm(SpecData$Shearing.quotient, main="Shearing Quotient Normality Check")
qqline(SpecData$Shearing.quotient, col="black")
qqnorm(SpecData$DNE, main="DNE Normality Check")
qqline(SpecData$DNE, col="black")
RFI <- qqnorm(SpecData$RFI, main="RFI Normality Check")
qqline(SpecData$RFI, col="black")
shapiro.test(SpecData$RFI)
OPCR <- ggplot(data = SpecData, aes(x= fct_reorder(Diet, OPCR, fun=median), y=OPCR)) + geom_boxplot(aes(fill=Group))
#Call each to check on the data, note that 6 rows are removed in the shearing.ratio and shearing.quotient due to lack of data for Daubentonidae
OPCR
# Recreating Figure 2: Boxplots of each Dental topography to the type of diet
library(ggplot2)
OPCR <- ggplot(data = SpecData, aes(x= fct_reorder(Diet, OPCR, fun=median), y=OPCR)) + geom_boxplot(aes(fill=Group))
#Call each to check on the data, note that 6 rows are removed in the shearing.ratio and shearing.quotient due to lack of data for Daubentonidae
OPCR
ggplot(data = SpecData, aes(x = fct_reorder(Diet, OPCR, fun = median), y = OPCR)) + geom_boxplot()
library(dplyr)
ggplot(data = SpecData, aes(x = fct_reorder(Diet, OPCR, fun = median), y = OPCR)) + geom_boxplot()
OPCR <- ggplot(data = SpecData, aes(x= fct_reorder(Diet, OPCR, fun=median), y=OPCR)) + geom_boxplot(aes(fill=Group))
#Call each to check on the data, note that 6 rows are removed in the shearing.ratio and shearing.quotient due to lack of data for Daubentonidae
OPCR
OPCR %>%
mutate(class = fct_reorder(Diet, OPCR, .fun='median')) %>%
ggplot( aes(x=reorder(Diet, OPCR), y=OPCR, fill=Group)) +
geom_boxplot() +
xlab("DIiet") +
theme(legend.position="none") +
xlab("")
# Recreating Figure 2: Boxplots of each Dental topography to the type of diet
library(ggplot2)
OPCR %>%
mutate(class = fct_reorder(Diet, OPCR, .fun='median')) %>%
ggplot( aes(x=reorder(Diet, OPCR), y=OPCR, fill=Group)) +
geom_boxplot() +
xlab("DIiet") +
theme(legend.position="none") +
xlab("")
p <- SpecData %>%
mutate(name = fct_relevel(OPCR,
"Insectivory", "Folivory", "Omnivory",
"Frugivory", "Hard-Object Feeding")) %>%
ggplot( aes(x=name, y=val)) +
geom_bar(stat="Group") +
xlab("")
library(tidyverse)
OPCR <- ggplot(data = SpecData, aes(x= fct_reorder(Diet, OPCR, fun=median), y=OPCR)) + geom_boxplot(aes(fill=Group))
#Call each to check on the data, note that 6 rows are removed in the shearing.ratio and shearing.quotient due to lack of data for Daubentonidae
OPCR
OPCR <- ggplot(data = SpecData, aes(x= fct_reorder(Diet, OPCR, fun=median), y=OPCR)) + geom_boxplot(aes(fill=Group))
#Call each to check on the data, note that 6 rows are removed in the shearing.ratio and shearing.quotient due to lack of data for Daubentonidae
OPCR
install.packages("forcats")
install.packages("forcats")
library(forcats)
OPCR <- ggplot(data = SpecData, aes(x= fct_reorder(Diet, OPCR, fun=median), y=OPCR)) + geom_boxplot(aes(fill=Group))
#Call each to check on the data, note that 6 rows are removed in the shearing.ratio and shearing.quotient due to lack of data for Daubentonidae
OPCR
p <- SpecData %>%
mutate(name = fct_relevel(OPCR,
"Insectivory", "Folivory", "Omnivory",
"Frugivory", "Hard-Object Feeding")) %>%
ggplot( aes(x=name, y=val)) +
geom_bar(stat="Group") +
xlab("")
p <- SpecData %>%
mutate(name = fct_relevel(OPCR,
"Insectivory", "Folivory", "Omnivory",
"Frugivory", "Hard-Object Feeding")) %>%
ggplot( aes(x=name, y=val)) +
geom_bar(stat="Group") +
xlab("")
SpecData %>%
mutate(name = fct_reorder(Diet, OPCR)) %>%
ggplot( aes(x=Diet, y=OPCR)) +
geom_boxplot(aes(fill=Group)) +
coord_flip() +
xlab("") +
theme_bw()
SpecData %>%
mutate(class = fct_reorder(Diet, OPCR, .fun='median')) %>%
ggplot( aes(x=reorder(Diet, OPCR), y=OPCR, fill=Group)) +
geom_boxplot() +
xlab("Diet") +
theme(legend.position="none") +
xlab("")
p <- SpecData %>%
mutate(name = fct_relevel(Diet,
"Insectivory", "Folivory", "Omnivory",
"Frugivory", "Hard-Object Feeding")) %>%
ggplot( aes(x=Diet, y=OPCR)) +
geom_bar(stat="identity") +
xlab("")
p
p <- SpecData %>%
mutate(name = fct_relevel(Diet,
"Insectivory", "Folivory", "Omnivory",
"Frugivory", "Hard-Object Feeding")) %>%
ggplot( aes(x=Diet, y=OPCR)) +
geom_boxplot(aes(fill=Group)) +
xlab("")
p
DNE
p <- SpecData %>%
mutate(Diet = fct_relevel(Diet,
"Insectivory", "Folivory", "Omnivory",
"Frugivory", "Hard-Object Feeding")) %>%
ggplot( aes(x=Diet, y=OPCR)) +
geom_boxplot(aes(fill=Group)) +
xlab("")
p
p <- SpecData %>%
mutate(Diet = fct_relevel(Diet,
"Insectivory", "Folivory", "Omnivory",
"Frugivory", "Hard-Object Feeding")) %>%
ggplot( aes(x=Diet, y=OPCR)) +
geom_boxplot(aes(fill=Group)) +
xlab("Diet")
p
SR <- SpecData %>%
mutate(Diet = fct_relevel(Diet,
"Insectivory", "Folivory", "Omnivory",
"Frugivory", "Hard-Object Feeding")) %>%
ggplot( aes(x=Diet, y=Shearing.ratio)) +
geom_boxplot(aes(fill=Group)) +
xlab("Diet")
SR
SQ <- SpecData %>%
mutate(Diet = fct_relevel(Diet,
"Insectivory", "Folivory", "Omnivory",
"Frugivory", "Hard-Object Feeding")) %>%
ggplot( aes(x=Diet, y=Shearing.quotient)) +
geom_boxplot(aes(fill=Group)) +
xlab("Diet")
SQ
DNE <- SpecData %>%
mutate(Diet = fct_relevel(Diet,
"Insectivory", "Folivory", "Omnivory",
"Frugivory", "Hard-Object Feeding")) %>%
ggplot( aes(x=Diet, y=DNE)) +
geom_boxplot(aes(fill=Group)) +
xlab("Diet")
DNE
RFI <- SpecData %>%
mutate(Diet = fct_relevel(Diet,
"Insectivory", "Folivory", "Omnivory",
"Frugivory", "Hard-Object Feeding")) %>%
ggplot( aes(x=Diet, y=RFI)) +
geom_boxplot(aes(fill=Group)) +
xlab("Diet")
RFI
#Checking the Class of Group and Diet
class(SpecData$Group)
class(SpecData$Diet)
# Making a quick plot to look at the differences in dietary type
plot (SpecData$Diet ~ SpecData$Group)
# Another Quick Plot to Look at Variation in M2 Length in Prosimians vs. Platyrrhines
plot (SpecData$M2.Length ~ SpecData$Group)
# Making a quick plot to look at the differences in dietary type
plot (SpecData$Group~ SpecData$Diet)
#Checking the Class of Group and Diet
class(SpecData$Group)
class(SpecData$Diet)
# Making a quick plot to look at the differences in dietary type
plot (SpecData$Diet ~ SpecData$Group)
# Another Quick Plot to Look at Variation in M2 Length in Prosimians vs. Platyrrhines
plot (SpecData$M2.Length ~ SpecData$Group)
# Another Quick Plot to Look at Variation in M2 Length in Prosimians vs. Platyrrhines
M2Group <- plot (SpecData$M2.Length ~ SpecData$Group)
M2Group
# Setting the model
dM2model<- lm(data = SpecData, M2.Length ~ Group)
summary(dM2model)
# Making a quick plot to look at the differences in dietary type
plot (SpecData$RFI ~ SpecData$Group)
# Making a quick plot to look at the differences in dietary type
plot (SpecData$Diet ~ SpecData$Group)
DNE3 <-
DNEaov <- aov(data = SpecData, Group ~ DNE+RFI+OPCR+SR+SQ)
DNE3 <-
DNEaov <- aov(data = SpecData, Group ~ DNE+RFI+OPCR)
summary(M2aov)
DNEaov <- aov(data = SpecData, Group ~ DNE+RFI+OPCR)
summary(DNEaov)
DNE3 <-
DNEaov <- aov(data = SpecData, Group ~ DNE)
summary(DNEaov)
DNE3 <-
DNEaov <- aov(data = SpecData, DNE ~ Group)
summary(DNEaov)
par(mfrow = c(3, 3))
plot(DNEaov)
# Setting the model
DNEmodel<- lm(data = SpecData, DNE ~ Group)
summary(DNEmodel)
DNE3 <-
DNEaov <- aov(data = SpecData, Group~DNE)
summary(DNEaov)
DNE3 <-
DNEaov <- aov(data = SpecData, RFI ~ Group)
summary(DNEaov)
m <- aov(data = SpecData, DNE ~ Group + RFI + OPCR)
m
m <- aov(data = SpecData, DNE+ RFI + OPCR ~ Group )
m
# Setting the model
DNEmodel<- lm(data = SpecData, DNE:RFI ~ Group)
m <- aov(data = SpecData, DNE:RFI ~ Group )
m <- aov(data = SpecData, DNE~ Group: RFI )
m
# Setting the model
DNEmodel<- lm(data = SpecData, DNE ~ Diet)
m <- aov(data = SpecData, DNE~ Diet)
m
summary(m)
m <- aov(data = SpecData, DNE~ Group * Diet)
summary(m)
DNE <- aov(data = SpecData, DNE~ Group * Diet)
summary(DNE)
DNEaov <- aov(data = SpecData, DNE~ Group * Diet)
summary(DNEaov)
par(mfrow = c(3, 3))
plot(DNEaov)
par(mfrow = c(2, 2))
plot(DNEaov)
DNEaov <- aov(data = SpecData, DNE~ Group * Diet)
summary(DNEaov)
# Running 2-Way ANOVA for DNE
DNEaov <- aov(data = SpecData, Group ~ DNE*Diet)
summary(DNEaov)
RFIaov <- aov(data = SpecData, RFI~ Group * Diet)
summary(RFIaov)
par(mfrow = c(2, 2))
plot(RFIaov)
RFIaov <- aov(data = SpecData, RFI~ Group * Diet)
summary(RFIaov)
summary(DNEaov)[[1]][["Pr(>F)"]]
summary(DNEaov)[[3]][["Pr(>F)"]]
DNEaov <- aov(data = SpecData, DNE~ Group * Diet)
summary(DNEaov)
# Quick Plot of DNE ANOVA
par(mfrow = c(2, 2))
plot(DNEaov)
tests <- summary(DNEaov)
str(tests)
tests[[1]]$'Pr(>F)'
str(summary(DNEaov))
summary(DNEaov)
DNElm <- lm(data = SpecData, DNE~ Group * Diet)
summary(DNElm)
# Running 2-Way ANOVA for RFI
RFIaov <- aov(data = SpecData, RFI~ Group * Diet)
summary(RFIaov)
# Quick Plot of DNE ANOVA
par(mfrow = c(2, 2))
plot(RFIaov)
# Running linear model for DNE to retrieve p-value
RFIlm <- lm(data = SpecData, RFI~ Group * Diet)
summary(RFIlm)
# Running 2-Way ANOVA for OPCR
OPCRaov <- aov(data = SpecData, OPCR~ Group * Diet)
summary(OPCRaov)
# Quick Plot of DNE ANOVA
par(mfrow = c(2, 2))
plot(OPCRaov)
# Running linear model for DNE to retrieve p-value
OPCRlm <- lm(data = SpecData, OPCR~ Group * Diet)
summary(OPCRlm)
OPCRaov <- aov(data = SpecData, OPCR~ Group * Diet)
summary(OPCRaov)
# Running 2-Way ANOVA for SR
SRaov <- aov(data = SpecData, SR~ Group * Diet)
SRaov <- aov(data = SpecData, Shearing.ratio~ Group * Diet)
summary(SRaov)
# Quick Plot of SR ANOVA
par(mfrow = c(2, 2))
plot(SRaov)
# Running linear model for SR to retrieve p-value
SRlm <- lm(data = SpecData, Shearing.ratio~ Group * Diet)
summary(SRlm)
SRaov <- aov(data = SpecData, Shearing.ratio~ Group * Diet)
summary(SRaov)
# Running 2-Way ANOVA for SR
SQaov <- aov(data = SpecData, Shearing.quotient~ Group * Diet)
summary(SQaov)
# Quick Plot of SR ANOVA
par(mfrow = c(2, 2))
plot(SQaov)
# Running linear model for SR to retrieve p-value
SQlm <- lm(data = SpecData, Shearing.quotient~ Group * Diet)
summary(SQlm)
TukeyHSD(DNEaov, "DNE", ordered = TRUE)
TukeyHSD(DNEaov, "DNE", ordered = FALSE)
DNEtuk <- aov(data = SpecData, DNE~ Group * Diet)
posthoc <- TukeyHSD(DNEtuk, "d$age", conf.level = 0.95)
posthoc
library(dplyr)
library(MASS)
## Building a Model for Group based on Diet
model <- lda(Diet~DNE+RFI+OPCR+M2.Length, data = SpecData %>% filter(Group=='Prosimii'))
model
predictions <- model %>% predict(SpecData)
names(predictions)
# Predicted classes
head(predictions$class, 6)
# Predicted probabilities of class memebership.
head(predictions$posterior, 6)
# Linear discriminants
head(predictions$x, 3)
# Make graph
lda.data <- cbind(SpecData %>% filter(Group=='Prosimii'), predict(model)$x)
ggplot(lda.data, aes(-LD1,-LD2), inherit.aes = FALSE) +
geom_point(aes(color = Diet))
<center>   <img src="Winchester_Table3.png">  </center>
<center> <img src="Winchester_Table3.png">  </center>
<center> <img src="Winchester_Table_3.png">  </center>
<center> <img src="Winchester_Table_3.png"> </center>
```{r}
library(MASS)
```{r}
model2 <- lda(Diet~DNE+RFI+OPCR+M2.Length, data = SpecData %>% filter(Group=='Platyrrhini'))
model2
predictions <- model %>% predict(SpecData)
names(predictions)
# Predicted classes
head(predictions$class, 6)
# Predicted probabilities of class memebership.
head(predictions$posterior, 6)
# Linear discriminants
head(predictions$x, 3)
# Make graph
lda.data2 <- cbind(SpecData %>% filter(Group=='Platyrrhini'), predict(model)$x)
ggplot(lda.data2, aes(-LD1,-LD2), inherit.aes = FALSE) +
geom_point(aes(color = Diet))
# Make graph
lda.data2 <- cbind(SpecData %>% filter(Group=='Platyrrhini'), predict(model)$x)
# Make graph
lda.data <- cbind(SpecData %>% filter(Group=='Platyrrhini'), predict(model)$x)
# Make graph
lda.data <- cbind(SpecData %>% filter(Group=='Platyrrhini'), predict(model)$x)
# Make graph
lda.data <- cbind(SpecData %>% filter(Group=='Platyrrhini'), stopifnot(all(na.omit(1:3) == 1:3)), predict(model)$x)
## Building a Model for Group based on Diet
model2 <- lda(Diet~DNE+RFI+OPCR+M2.Length, data = SpecData %>% filter(Group=='Platyrrhini'))
model2
## Building a Model for Group based on Diet
model2 <- lda(Diet~DNE+RFI+OPCR+M2.Length, data = SpecData %>% filter(Group=='Platyrrhini'), na.omit("Insectivory"))
## Building a Model for Group based on Diet
model2 <- lda(Diet~DNE+RFI+OPCR+M2.Length, data = SpecData %>% filter(Group=='Platyrrhini'), na.omit(Insectivory))
## Building a Model for Group based on Diet
model2 <- lda(Diet~DNE+RFI+OPCR+M2.Length, data = SpecData %>% filter(Group=='Platyrrhini'), na.omit(Diet$Insectivory))
## Building a Model for Group based on Diet
model2 <- lda(Diet~DNE+RFI+OPCR+M2.Length, data = SpecData %>% filter(Group=='Platyrrhini'), na.omit(SpecData$Diet$Insectivory))
## Building a Model for Group based on Diet
model2 <- lda(Diet~DNE+RFI+OPCR+M2.Length, data = SpecData %>% filter(Group=='Platyrrhini'))
model2
predictions <- model %>% predict(SpecData)
names(predictions)
## Building a Model for Group based on Diet
model2 <- lda(Diet~DNE+RFI+OPCR+M2.Length, data = SpecData %>% filter(Group=='Platyrrhini'))
model2
predictions <- model2 %>% predict(SpecData)
names(predictions)
# Predicted classes
head(predictions$class, 6)
# Predicted probabilities of class memebership.
head(predictions$posterior, 6)
# Linear discriminants
head(predictions$x, 3)
# Make graph
lda.data2 <- cbind(SpecData %>% filter(Group=='Platyrrhini'), predict(model2)$x)
ggplot(lda.data2, aes(-LD1,-LD2), inherit.aes = FALSE) +
geom_point(aes(color = Diet))
## Building a Model for Group based on Diet
model3 <- lda(Diet~DNE+RFI+OPCR+M2.Length, data = SpecData)
model3
predictions <- model3 %>% predict(SpecData)
names(predictions)
# Predicted classes
head(predictions$class, 6)
# Predicted probabilities of class memebership.
head(predictions$posterior, 6)
# Linear discriminants
head(predictions$x, 3)
# Make graph
lda.data2 <- cbind(SpecData, predict(model3)$x)
ggplot(lda.data2, aes(-LD1,-LD2), inherit.aes = FALSE) +
geom_point(aes(color = Diet))
# Make graph
lda.data3 <- cbind(SpecData, predict(model3)$x)
ggplot(lda.data3, aes(-LD1,-LD2), inherit.aes = FALSE) +
geom_point(aes(color = Diet))
ggplot(lda.data3, aes(-LD1,-LD2), inherit.aes = FALSE) +
geom_point(aes(color = Diet, shape = Group))
```{r, eval= FALSE}
![](https://media.giphy.com/media/hqm1CUpaOPxeEG8gY1/giphy.gif)
# Linear discriminants
head(predictions$x, 3)
# Make graph
lda.data3 <- cbind(SpecData, predict(model3)$x)
ggplot(lda.data3, aes(-LD1,-LD2), inherit.aes = FALSE) +
geom_point(aes(color = Diet, shape = Group))
# Make graph
lda.data2 <- cbind(SpecData %>% filter(Group=='Platyrrhini'), predict(model2)$x)
ggplot(lda.data2, aes(-LD1,-LD2), inherit.aes = FALSE) +
geom_point(aes(color = Diet))
# Recreating Figure 2: Boxplots of each Dental topography to the type of diet
library(forcats)
